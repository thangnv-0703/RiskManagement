import {
  AV_ADJACENT_NETWORK,
  AV_ALL,
  AV_LOCAL,
  AV_NETWORK,
  AV_PHYSICAL,
  MAX_INT,
  PR_ALL,
} from '@/shared/constant';
import ProTable from '@ant-design/pro-table';
import { Affix, Button, Form, Input, message, Select, Table, Typography } from 'antd';
import React, { useContext, useEffect, useRef, useState } from 'react';
const { Paragraph } = Typography;

import './index.css';

const VulnerabiliesSettingPerAssetDetail = ({ cves }) => {
  const [dataSource, setDataSource] = useState([]);

  const columns = [
    {
      title: 'CVE ID',
      dataIndex: 'cve_id',
      width: '20%',
    },
    {
      title: 'Description',
      dataIndex: 'description',
      width: '40%',
      hideInForm: true,
      hideInSearch: true,
      render: (val) => <Paragraph ellipsis={{ tooltip: val, rows: 3 }}>{val}</Paragraph>,
    },
    {
      title: 'Exploitability',
      dataIndex: 'exploitabilityScore',
      width: '10%',
    },
    {
      title: 'Attack vector',
      dataIndex: 'attack_vector',
      width: '10%',
    },
    {
      title: 'Prerequisite',
      dataIndex: 'preCondition',
      width: '10%',
    },
    {
      title: 'Postcondition',
      dataIndex: 'postCondition',
      width: '10%',
    },
  ];

  useEffect(() => {
    const fetchData = async () => {
      const v = cves?.map((item) => {
        return {
          key: item.id,
          ...item,
          exploitabilityScore: item?.impact?.baseMetricV2?.exploitabilityScore,
          preCondition: item?.condition?.preCondition,
          postCondition: item?.condition?.postCondition,
        };
      });
      setDataSource(v);
    };
    fetchData();
  }, []);

  return (
    <div>
      <Table
        rowKey="cve_id"
        toolBarRender={false}
        bordered
        dataSource={dataSource}
        columns={columns}
      />
    </div>
  );
};
export default VulnerabiliesSettingPerAssetDetail;
