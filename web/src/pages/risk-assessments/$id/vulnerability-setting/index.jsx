import { convertAssetType } from '@/shared/common';
import { EXPLOITABILITY, REMEDIATION_LEVEL, REPORT_CONFIDENCE } from '@/shared/constant';
import { Col, Row, Select, Table } from 'antd';
import React, {  } from 'react';
import VulnerabiliesSettingPerAssetDetail from './components/VulnerabiliesSettingPerAsset';


const VulnerabilySettingDetail = ({ riskAssessmentReport }) => {

    const columns = [
        {
            title: 'Asset name',
            width: '40%',
            dataIndex: 'name',
        },
        {
            title: 'Type',
            width: '15%',
            dataIndex: 'part',
            render: (_) => convertAssetType(_)
        },
        {
            title: 'Vendor',
            width: '10%',
            dataIndex: 'vendor',
        },
        {
            title: 'Product',
            width: '10%',
            dataIndex: 'product',
        },
        {
            title: 'Version',
            width: '10%',
            dataIndex: 'version',
        },
        {
            title: 'Number CVEs',
            width: '15%',
            dataIndex: 'number_cves',
            render: (_, record) => {
                const cves = riskAssessmentReport?.deployment_scenario?.cves?.find((asset) => asset.asset_id == record.id)
                return cves.cves.length
            }
        }
    ];

    return (
        <>
            <Row gutter={20} style={{marginBottom: 24}}>
                <Col span={8}>
                    <b>Exploitability </b>
                    <Select
                        value={riskAssessmentReport?.deployment_scenario?.exploitability}
                        style={{
                            width: 170,
                        }}
                        disabled
                    >
                        {
                            EXPLOITABILITY.map(ex => (
                                <Select.Option value={ex.type} key={ex.type}>
                                    {ex.type}
                                </Select.Option>
                            ))
                        }
                    </Select>
                </Col>
                <Col span={8}>
                    <b>Remediation level </b>
                    <Select
                        value={riskAssessmentReport?.deployment_scenario?.remediation_level}
                        style={{
                            width: 170,
                        }}
                        disabled
                    >
                        {
                            REMEDIATION_LEVEL.map(ex => (
                                <Select.Option value={ex.type} key={ex.type}>
                                    {ex.type}
                                </Select.Option>
                            ))
                        }
                    </Select>
                </Col>
                <Col span={8}>
                    <b>Report confidence </b>
                    <Select
                        value={riskAssessmentReport?.deployment_scenario?.report_confidence}
                        style={{
                            width: 170,
                        }}
                        disabled
                    >
                        {
                            REPORT_CONFIDENCE.map(ex => (
                                <Select.Option value={ex.type} key={ex.type}>
                                    {ex.type}
                                </Select.Option>
                            ))
                        }
                    </Select>
                </Col>
            </Row>
            <Table
                columns={columns}
                dataSource={riskAssessmentReport?.deployment_scenario?.assets}
                rowKey="id"
                expandable={{
                    expandedRowRender: (record) => (
                        <VulnerabiliesSettingPerAssetDetail
                            cves={riskAssessmentReport?.deployment_scenario?.cves?.find((asset) => asset.asset_id == record.id)?.cves}
                        />
                    ),
                }}
                dateFormatter="string"
                options={false}
            />
        </>
    );
};
export default VulnerabilySettingDetail