import { convertAssetType } from '@/shared/common';
import { EXPLOITABILITY, MAX_INT, REMEDIATION_LEVEL, REPORT_CONFIDENCE } from '@/shared/constant';
import { DownOutlined, EllipsisOutlined, QuestionCircleOutlined } from '@ant-design/icons';
import { PageContainer } from '@ant-design/pro-layout';
import ProTable from '@ant-design/pro-table';
import { Affix, Button, Col, Row, Select, Table, Tag, Tooltip } from 'antd';
import React, { useEffect, useState } from 'react';
import { getAssetsInDeploymentScenario } from '../service';
import VulnerabiliesSettingPerAsset from './components/VulnerabiliesSettingPerAsset';

const VulnerabilySetting = ({
  deployment_scenario_id,
  assets,
  setAssets,
  exploitability,
  setExploitability,
  remediationLevel,
  setRemediationLevel,
  reportConfidence,
  setReportConfidence,
}) => {
  const [activeCVEs, setActiveCVEs] = useState({});
  const [expandedRowKeys, setExpandedRowKeys] = useState([]);

  const columns = [
    {
      title: 'Asset name',
      width: '40%',
      dataIndex: 'name',
    },
    {
      title: 'Type',
      width: '15%',
      dataIndex: 'part',
      render: (_) => convertAssetType(_),
    },
    {
      title: 'Vendor',
      width: '10%',
      dataIndex: 'vendor',
    },
    {
      title: 'Product',
      width: '10%',
      dataIndex: 'product',
    },
    {
      title: 'Version',
      width: '10%',
      dataIndex: 'version',
    },
    {
      title: 'Number CVEs',
      width: '15%',
      dataIndex: 'number_cves',
      render: (_, record) => activeCVEs[record.id]?.length,
    },
  ];

  useEffect(() => {
    const fetchData = async () => {
      const resData = await getAssetsInDeploymentScenario(deployment_scenario_id, {
        pageSize: MAX_INT,
      });
      setAssets(resData.data.assets);
      setActiveCVEs(resData.data.active);
    };

    fetchData();
  }, []);

  return (
    <div>
      <Row gutter={20} style={{ marginBottom: 24 }}>
        <Col span={8}>
          <b>Exploitability </b>
          <Select
            value={exploitability}
            style={{
              width: 170,
              marginLeft: 20,
            }}
            onChange={(value) => setExploitability(value)}
          >
            {EXPLOITABILITY.map((ex) => (
              <Select.Option value={ex.type} key={ex.type}>
                {ex.type}
              </Select.Option>
            ))}
          </Select>
        </Col>
        <Col span={8}>
          <b>Remediation level </b>
          <Select
            value={remediationLevel}
            style={{
              width: 170,
              marginLeft: 20,
            }}
            onChange={(value) => setRemediationLevel(value)}
          >
            {REMEDIATION_LEVEL.map((ex) => (
              <Select.Option value={ex.type} key={ex.type}>
                {ex.type}
              </Select.Option>
            ))}
          </Select>
        </Col>
        <Col span={8}>
          <b>Report confidence </b>
          <Select
            value={reportConfidence}
            style={{
              width: 170,
              marginLeft: 20,
            }}
            onChange={(value) => setReportConfidence(value)}
          >
            {REPORT_CONFIDENCE.map((ex) => (
              <Select.Option value={ex.type} key={ex.type}>
                {ex.type}
              </Select.Option>
            ))}
          </Select>
        </Col>
      </Row>
      <Table
        style={{ maxHeight: 'calc(100vh - 440px)', overflowY: 'auto' }}
        columns={columns}
        dataSource={assets}
        rowKey="id"
        pagination={{ hideOnSinglePage: true }}
        expandable={{
          expandedRowRender: (record) => (
            <VulnerabiliesSettingPerAsset
              asset_id={record.id}
              deployment_scenario_id={deployment_scenario_id}
              activeCVEs={activeCVEs}
              setActiveCVEs={setActiveCVEs}
            />
          ),
          expandedRowKeys: expandedRowKeys,
          onExpand: (expaned, record) => {
            if (expaned) {
              setExpandedRowKeys([record.id]);
            } else {
              setExpandedRowKeys([]);
            }
          },
        }}
        dateFormatter="string"
        options={false}
      />
    </div>
  );
};
export default VulnerabilySetting;
