from service_proxy.category_proxy_service import CategoryProxyService
from fastapi import Depends, APIRouter, Body, Request
router = APIRouter(tags=['scan_vulnerability'])

@router.post('/scan_vulnerability')
async def scan_vulneraibility(deployment_scenario: dict):
    print('Start scan')
    assets = {}
    for asset in deployment_scenario['assets']:
        assets[asset['id']] = {
            'cpe': asset['cpe'],
        }
    for asset_cve in deployment_scenario['cves']:
        cves = [cve['cve_id'] for cve in asset_cve['cves']]
        assets[asset_cve['asset_id']] = {
            **assets[asset_cve['asset_id']],
            'cves': cves,
        }
    new_cves = []
    remove_cves = []
    print('Number Asset:', len(assets))
    for asset_id in assets:
        cves = await CategoryProxyService.get_cves_by_cpe_name(assets[asset_id]['cpe'])
        print('Asset_id: ', asset_id)
        cves = [cve['cve_id'] for cve in cves]
        new_cves.append({
            'asset_id': asset_id,
            'cves': [cve_id for cve_id in cves if cve_id not in assets[asset_id]['cves']],
        })
        remove_cves.append({
            'asset_id': asset_id,
            'cves': [cve_id for cve_id in assets[asset_id]['cves'] if cve_id not in cves],
        })        
    return {
        'new_cves': new_cves,
        'remove_cves': remove_cves,
        'assets': deployment_scenario['assets'],
    }